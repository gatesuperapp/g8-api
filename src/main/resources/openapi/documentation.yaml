openapi: "3.0.3"
info:
  title: "G8 API"
  description: "A demo for what could be an API for the G8 App"
  version: "1.0.0"
servers:
  - url: "https://g8-api-4zjqp.ondigitalocean.app"
    description: Dev on DigitalOcean
  - url: "http://127.0.0.1:8080"
    description: Local server
paths:
  /:
    get:
      description: "Hello World!"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
  /api/user/{id}:
    get:
      summary: "Get a user by id"
      parameters:
        - name: id
          in: path
          required: true
          description: A user id.
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 1
      responses:
        "200":
          description: "Successfully returned the requested user"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: "No user found"
          content:
            text/plain:
              schema:
                type: "string"
  /api/user:
    get:
      summary: "Get all users"
      responses:
        "200":
          description: "Successfully returned a list of users"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfUsers'
        "404":
          description: "No users found"
          content:
            text/plain:
              schema:
                type: "string"
  /api/user/{id}/subscription:
    get:
      summary: "Get active subscription for the authenticated user"
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: A user id.
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 1
      responses:
        "200":
          description: "Successfully returned the current subscription"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
  /api/authentication/signup:
    post:
      summary: Creates a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequestViewModel'
            example:
              firstName: 'Alice'
              lastName: 'Fox'
              email: 'afox@g8.org'
              password: 'pwd'
      responses:
        '201':
          description: Created
  /api/authentication/signin:
    post:
      summary: Authenticate and get a JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            example:
              email: 'afox@g8.org'
              password: 'pwd'
      responses:
        '200':
          description: Authentication succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponseViewModel'
        '401':
          description: Authentication failed
          $ref: '#/components/responses/UnauthorizedError'
  /api/authentication/refresh:
    post:
      summary: Get a new JWT using the refresh token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequestViewModel'
            example:
              refreshToken: '[put your token here]'
      responses:
        '200':
          description: Auth Token was renewed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponseViewModel'
        '401':
          description: Authentication failed
  /api/authentication/recovery:
    post:
      summary: Start the password recovery process
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoveryRequestViewModel'
            example:
              email: 'sfox@g8.app'
      responses:
        '200':
          description: Recovery email sent
  /api/authentication/recovery-confirmation:
    post:
      summary: Send the recovery token to confirm the password change
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoveryConfirmationRequestViewModel'
            example:
              recoveryToken: 'azerTyuIop...'
              password: 'newPassword'
      responses:
        '200':
          description: Password updated

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ArrayOfUsers:
      type: array
      items:
        $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
    ArrayOfSubscriptions:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
    Subscription:
      type: object
      properties:
        id:
          type: integer
        productId:
          type: string
        activeUntil:
          type: string
    AuthRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    ErrorResponse:
      type: object
      properties:
        Message:
          type: string
    SignupRequestViewModel:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
    SignInResponseViewModel:
      type: object
      properties:
        authToken:
          type: string
        refreshToken:
          type: string
    RefreshTokenRequestViewModel:
      type: object
      properties:
        refreshToken:
          type: string
    RecoveryRequestViewModel:
      type: object
      properties:
        email:
          type: string
    RecoveryConfirmationRequestViewModel:
      type: object
      properties:
        recoveryToken:
          type: string
        password:
          type: string

