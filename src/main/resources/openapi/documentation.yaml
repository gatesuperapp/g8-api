openapi: "3.0.3"
info:
  title: "Application API"
  description: "Application API"
  version: "1.0.0"
servers:
  - url: "http://127.0.0.1:8080"
paths:
  /:
    get:
      description: "Hello World!"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
  /api/farmer/{id}:
    get:
      summary: "Get a farmer by id"
      parameters:
        - name: id
          in: path
          required: true
          description: A farmer id.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: "Successfully returned the requested farmer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farmer'
        "404":
          description: "No farmer found"
          content:
            text/plain:
              schema:
                type: "string"
  /api/farmer:
    get:
      summary: "Get all farmers"
      responses:
        "200":
          description: "Successfully returned a list of farmers"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFarmers'
        "404":
          description: "No farmers found"
          content:
            text/plain:
              schema:
                type: "string"
    post:
      summary: Creates a farmer.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farmer'
            example:
              id: 1
              firstName: 'Alice'
              lastName: 'Fox'
              email: 'afox@g8.org'
              password: 'pwd'
      responses:
        '201':
          description: Created
  /api/farmer/{id}/product:
    get:
      summary: "Get all products of the authenticated farmer"
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: "Successfully returned a list of products"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfProducts'
              example:
                id: 1
  /api/auth:
    post:
      summary: Authenticate and get a JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            example:
              email: 'afox@g8.org'
              password: 'pwd'
      responses:
        '201':
          description: Created
        '400':
          description: Authentication failed

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    ArrayOfFarmers:
      type: array
      items:
        $ref: '#/components/schemas/Farmer'
    Farmer:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
    ArrayOfProducts:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    Product:
      type: object
      properties:
        id:
          type: Int
        name:
          type: string
        quantity:
          type: Int
    AuthRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    ResponseBase:
      type: object
      properties:
        Message:
          type: string

